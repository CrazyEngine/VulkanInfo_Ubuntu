// https://code.visualstudio.com/docs/editor/tasks
{
    "version": "2.0.0",
    "tasks": [
        //每一对花括号就是一个task。如果只有一个task，按“Ctrl+Shift+B”就直接运行这个task；
		//否则就会下拉框中弹出所有的task（名字就是字段"label"后面注明的）。
		{
            "label": "Compile", // task的名称，在launch.json里的字段“preLaunchTask”里进行引用。
            // 这个task要执行的可执行程序，此处指定了使用编译器g++（Ubuntu下可使用的编译器有g++或者gcc，Windows下面使用msbuild）。
			"command": "g++",
			// 这个task要执行的可执行程序的参数
            "args": [
                //"${file}",
                "-g", // 生成和调试有关的信息
                "${workspaceRoot}/vulkaninfo.cpp", // 
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe
                "VulkanInfo.exe",
                //"${fileDirname}/${fileBasenameNoExtension}.exe",
                "-ldl",
                //"-Wall", // 开启额外警告
                //"-static-libgcc", // 静态链接
                //"-fcolor-diagnostics",
                "-std=c++17" // C语言最新标准为c11，或根据自己的需要进行修改
            ], // 编译命令参数
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true // 设为false可做到一个tasks.json配置多个编译指令，需要自己修改本文件，我这里不多提
            },
            "presentation": {
                "echo": true,
                "reveal": "always", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档
                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译c和c++来说，设为true没有意义
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            }
            // "problemMatcher":"$gcc" // 如果你不使用clang，去掉前面的注释符，并在上一条之后加个逗号。照着我的教程做的不需要改（也可以把这行删去)
        }
    ]
}